<div class="space-y-10 divide-y divide-gray-900/10">

  <div class="flex justify-center m-auto gap-x-8 gap-y-8 pt-10 ">
    <div class="bg-white ring-1 shadow-xs ring-gray-900/5 sm:rounded-xl md:col-span-2">
    {{ form_start(form) }}
      <div class="px-4 py-6 sm:p-8">
        <div class="grid max-w-2xl grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
        
          <div class="col-span-full">
            <label for="name" class="block text-sm/6 font-medium text-gray-900">Name</label>
            <div class="mt-2">
              <input type="text" name="{{ field_name(form.name) }}" value="{{ field_value(form.name) }}" id="name" autocomplete="given-name" class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 border">
            </div>
          </div>
          <div class="sm:col-span-3">
            <label for="email" class="block text-sm/6 font-medium text-gray-900">Email</label>
            <div class="mt-2">
              <input type="email" name="{{ field_name(form.email) }}" value="{{ field_value(form.email) }}" id="email" autocomplete="given-name" class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 border">
            </div>
          </div>

          <div class="sm:col-span-3">
            <label for="phone" class="block text-sm/6 font-medium text-gray-900">Phone</label>
            <div class="mt-2">
              <input type="text" name="{{ field_name(form.phone) }}" value="{{ field_value(form.phone) }}" id="phone" autocomplete="given-name" class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 border">
            </div>
          </div>

        <div class="col-span-full">
          <label for="cover-photo" class="block text-sm/6 font-medium text-gray-900">Cover photo</label>
          <div class="mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10">
            <div class="text-center">
              <svg class="mx-auto size-12 text-gray-300" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true" data-slot="icon">
                <path fill-rule="evenodd" d="M1.5 6a2.25 2.25 0 0 1 2.25-2.25h16.5A2.25 2.25 0 0 1 22.5 6v12a2.25 2.25 0 0 1-2.25 2.25H3.75A2.25 2.25 0 0 1 1.5 18V6ZM3 16.06V18c0 .414.336.75.75.75h16.5A.75.75 0 0 0 21 18v-1.94l-2.69-2.689a1.5 1.5 0 0 0-2.12 0l-.88.879.97.97a.75.75 0 1 1-1.06 1.06l-5.16-5.159a1.5 1.5 0 0 0-2.12 0L3 16.061Zm10.125-7.81a1.125 1.125 0 1 1 2.25 0 1.125 1.125 0 0 1-2.25 0Z" clip-rule="evenodd" />
              </svg>
              <div class="mt-4 flex text-sm/6 text-gray-600">
                <label for="file-upload" class="relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 focus-within:outline-hidden hover:text-indigo-500">
                  <span>Upload a picture</span>
                  <input id="file-upload" name="{{ field_name(form.picture) }}" value="{{ field_value(form.picture) }}" type="file" class="sr-only">
                </label>
                <p class="pl-1">or drag and drop</p>
              </div>
              <p class="text-xs/5 text-gray-600">PNG, JPG, GIF up to 10MB</p>
            </div>
          </div>
        </div>

          <div class="col-span-full">
            <label for="Address" class="block text-sm/6 font-medium text-gray-900">Address</label>
            <div class="mt-2">
              <input type="text" name="{{ field_name(form.address) }}" value="{{ field_value(form.address) }}" id="Address" autocomplete="given-name" class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 border">
            </div>
          </div>

        </div>
      </div>
      <div class="flex items-center justify-end gap-x-6 border-t border-gray-900/10 px-4 py-4 sm:px-8">
        <a href="{{ path('app_clients_index') }}"><button type="button" class="text-sm/6 font-semibold text-gray-900">Cancel</button></a>
        <button type="submit" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">{{ button_label|default('Save') }}</button>
      </div>
      {{ form_end(form) }}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const dropArea = document.querySelector('.mt-2.flex.justify-center'); // Zone de dépôt
  const fileInput = document.getElementById('file-upload'); // Champ input file
  const fileNameDisplay = document.createElement('p'); // Élément pour afficher le nom du fichier
  fileNameDisplay.classList.add('mt-2', 'text-sm', 'text-gray-700'); // Ajout de classes pour le style
  dropArea.appendChild(fileNameDisplay); // Ajout de l'élément à la zone de dépôt

  // Fonction pour afficher le nom du fichier
  const displayFileName = (file) => {
    if (file) {
      fileNameDisplay.textContent = `Fichier sélectionné : ${file.name}`;
      console.log('Fichier sélectionné :', file.name);
    }
  };

  // Empêche le comportement par défaut pour dragover et drop
  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, (e) => e.preventDefault());
    dropArea.addEventListener(eventName, (e) => e.stopPropagation());
  });

  // Ajoute des styles visuels pour les états de dragover et dragleave
  ['dragenter', 'dragover'].forEach(eventName => {
    dropArea.addEventListener(eventName, () => {
      dropArea.classList.add('border-indigo-600');
    });
  });

  ['dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, () => {
      dropArea.classList.remove('border-indigo-600');
    });
  });

  // Gestion du dépôt de fichier
  dropArea.addEventListener('drop', (e) => {
    const files = e.dataTransfer.files; // Récupère les fichiers déposés
    if (files.length > 0) {
      fileInput.files = files; // Met à jour les fichiers du champ input
      displayFileName(files[0]); // Affiche le nom du fichier
    }
  });

  // Gestion de la sélection de fichier via le bouton "Upload a picture"
  fileInput.addEventListener('change', () => {
    if (fileInput.files.length > 0) {
      displayFileName(fileInput.files[0]); // Affiche le nom du fichier
    }
  });
});
</script>