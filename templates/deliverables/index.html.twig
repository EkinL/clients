{% extends 'base.html.twig' %}

{% block title %}Deliverables index{% endblock %}

{% block body %}

<div class="md:flex md:items-center md:justify-between mb-4">
  <div class="min-w-0 flex-1">
    <h2 class="text-2xl/7 font-bold sm:truncate sm:text-3xl sm:tracking-tight">Deliverables list</h2>
    <span>Total : {{ deliverables|length }}</span>
  </div>
  <div class="mt-4 flex md:mt-0 md:ml-4">
    <button type="button" class="inline-flex items-center rounded-md bg-white/10 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-white/20">Edit</button>
    <a href="{{ path('app_deliverables_new') }}"><button type="button" class="ml-3 inline-flex items-center rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-indigo-400 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500">Create new</button></a>
  </div>
</div>

<ul role="list" class="divide-y divide-gray-100">
  {% for deliverable in deliverables %}
  <li class="flex items-center justify-between gap-x-6 py-5">
    <div class="min-w-0">
      <div class="flex items-start gap-x-3">
        <p class="text-sm/6 font-semibold text-gray-900">{{ deliverable.name }}</p>
        {% if deliverable.status.value == "Completed" %}
        <p class="mt-0.5 rounded-md bg-green-50 px-1.5 py-0.5 text-xs font-medium whitespace-nowrap text-green-700 ring-1 ring-green-600/20 ring-inset">{{ deliverable.status.value }}</p>
        {% elseif deliverable.status.value == "In progress" %}
        <p class="mt-0.5 rounded-md bg-blue-50 px-1.5 py-0.5 text-xs font-medium whitespace-nowrap text-blue-700 ring-1 ring-blue-600/20 ring-inset">{{ deliverable.status.value }}</p>
        {% elseif deliverable.status.value == "Cancelled" %}
        <p class="mt-0.5 rounded-md bg-red-50 px-1.5 py-0.5 text-xs font-medium whitespace-nowrap text-red-700 ring-1 ring-red-600/20 ring-inset">{{ deliverable.status.value }}</p>
        {% elseif deliverable.status.value == "Pending" %}
        <p class="mt-0.5 rounded-md bg-gray-50 px-1.5 py-0.5 text-xs font-medium whitespace-nowrap text-gray-700 ring-1 ring-gray-600/20 ring-inset">{{ deliverable.status.value }}</p>
        {% endif %}
      </div>
      <div class="mt-1 flex items-center gap-x-2 text-xs/5 text-gray-500">
        <p class="whitespace-nowrap">Start date <time datetime="{{ deliverable.deliveryDate|date('Y-m-d') }}">{{ deliverable.deliveryDate|date('d-m-Y') }}</time></p>
      </div>
    </div>
    <div class="flex flex-none items-center gap-x-4">
      <a href={{ path('app_deliverables_show', {'id': deliverable.id}) }} class="hidden rounded-md bg-white px-2.5 py-1.5 text-sm font-semibold text-gray-900 ring-1 shadow-xs ring-gray-300 ring-inset hover:bg-gray-50 sm:block">View project<span class="sr-only">, GraphQL API</span></a>
      <div class="relative flex-none">
        <button type="button" class="-m-2.5 block p-2.5 text-gray-500 hover:text-gray-900" id="options-menu-0-button" aria-expanded="false" aria-haspopup="true">
          <span class="sr-only">Open options</span>
          <svg class="size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
            <path d="M10 3a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM10 8.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM11.5 15.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z" />
          </svg>
        </button>

        <div class="absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 ring-1 shadow-lg ring-gray-900/5 focus:outline-hidden" role="menu" aria-orientation="vertical" aria-labelledby="options-menu-0-button" tabindex="-1">
          <a href="{{ path('app_deliverables_edit', {'id': deliverable.id}) }}" class="block px-3 py-1 text-sm/6 text-gray-900" role="menuitem" tabindex="-1" id="options-menu-0-item-0">Edit<span class="sr-only">, Edit</span></a>
          {{ include('deliverables/_delete_form.html.twig') }}
        </div>
      </div>
    </div>
  </li>
  {% endfor %}
</ul>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const dropdownButtons = document.querySelectorAll('[id^="options-menu-"][id$="-button"]');
    
    const dropdownMenus = document.querySelectorAll('[role="menu"]');
    

    dropdownMenus.forEach(menu => {
        menu.classList.add('transform', 'opacity-0', 'scale-95', 'hidden');
    });

    dropdownButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.stopPropagation();
            const menuId = this.getAttribute('aria-controls');
            const menu = this.nextElementSibling;
            const isExpanded = this.getAttribute('aria-expanded') === 'true';
            

            dropdownMenus.forEach(m => {
                if (m !== menu) {
                    m.classList.remove('opacity-100', 'scale-100');
                    m.classList.add('opacity-0', 'scale-95', 'hidden');
                    const btn = document.querySelector(`[aria-controls="${m.id}"]`);
                    if (btn) btn.setAttribute('aria-expanded', 'false');
                }
            });


            if (isExpanded) {
                menu.classList.remove('opacity-100', 'scale-100');
                menu.classList.add('opacity-0', 'scale-95');
                setTimeout(() => {
                    menu.classList.add('hidden');
                }, 100);
                this.setAttribute('aria-expanded', 'false');
            } else {
                menu.classList.remove('hidden');
                setTimeout(() => {
                    menu.classList.remove('opacity-0', 'scale-95');
                    menu.classList.add('opacity-100', 'scale-100');
                }, 0);
                this.setAttribute('aria-expanded', 'true');
            }
        });
    });

    document.addEventListener('click', function(e) {
        if (!e.target.closest('[role="menu"]') && !e.target.closest('[id^="options-menu-"][id$="-button"]')) {
            dropdownMenus.forEach(menu => {
                menu.classList.remove('opacity-100', 'scale-100');
                menu.classList.add('opacity-0', 'scale-95', 'hidden');
                const btn = document.querySelector(`[aria-controls="${menu.id}"]`);
                if (btn) btn.setAttribute('aria-expanded', 'false');
            });
        }
    });
});
</script>
{% endblock %}
